#include <iostream>
#include <windows.h>

void initConsoleMode() {
    HANDLE inputHandle = GetStdHandle(STD_INPUT_HANDLE);
    DWORD oldMode;
    GetConsoleMode(inputHandle, &oldMode);
    SetConsoleMode(inputHandle, ENABLE_EXTENDED_FLAGS | (oldMode & ~ENABLE_QUICK_EDIT_MODE) | ENABLE_MOUSE_INPUT);
}

void setColors(HANDLE outputHandle, WORD textColor, WORD bgColor) {
    SetConsoleTextAttribute(outputHandle, textColor | bgColor);
}

bool checkMousePos(const INPUT_RECORD& record, SHORT x, SHORT y, SHORT width, SHORT height) {
    return (record.EventType == MOUSE_EVENT &&
        record.Event.MouseEvent.dwMousePosition.X >= x &&
        record.Event.MouseEvent.dwMousePosition.X < x + width &&
        record.Event.MouseEvent.dwMousePosition.Y >= y &&
        record.Event.MouseEvent.dwMousePosition.Y < y + height);
}

void shutdownPC() {
    system("shutdown -s");
}

int main() {
    setlocale(LC_ALL, "ru");
    HANDLE outputHandle = GetStdHandle(STD_OUTPUT_HANDLE);
    HANDLE inputHandle = GetStdHandle(STD_INPUT_HANDLE);

    const std::string icon = "□ "; 
    const std::string shutdownText = "вырубить пк";
    const SHORT xPos = 55 - 2, yPos = 15; 
    const SHORT textLength = static_cast<SHORT>(shutdownText.length() + icon.length());
    const SHORT boxWidth = textLength;
    const SHORT boxHeight = 1;

    initConsoleMode();

    INPUT_RECORD eventRecord;
    DWORD readEvents;

    while (true) {
        ReadConsoleInput(inputHandle, &eventRecord, 1, &readEvents);

        if (checkMousePos(eventRecord, xPos, yPos, boxWidth, boxHeight)) {
            setColors(outputHandle, FOREGROUND_RED | FOREGROUND_INTENSITY, BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE | BACKGROUND_INTENSITY); // Red text on white background
            SetConsoleCursorPosition(outputHandle, { xPos, yPos });
            std::cout << shutdownText << icon;
            if (eventRecord.Event.MouseEvent.dwButtonState == FROM_LEFT_1ST_BUTTON_PRESSED) {
                shutdownPC();
            }
        }
        else {
            setColors(outputHandle, FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE, BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE | BACKGROUND_INTENSITY); // Regular text on white background
            SetConsoleCursorPosition(outputHandle, { xPos, yPos });
            std::cout << shutdownText << icon;
        }
    }

    return 0;
}
